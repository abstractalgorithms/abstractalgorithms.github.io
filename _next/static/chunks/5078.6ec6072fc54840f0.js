"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5078],{35078:function(e,n,s){s.r(n),s.d(n,{default:function(){return a},frontmatter:function(){return r},metadata:function(){return l}});var i=s(57437),t=s(75595);let r=void 0,l={id:"4g3h6c9d-0e1f-4b2a-9c3d-4e5f6g7h8i9j",slug:"fast-slow-pointers-interview-analysis-java",title:"Fast & Slow Pointers: Interview Scenarios, Analysis, and Java Implementation",date:"2025-07-16",excerpt:"Master fast & slow pointers for cycle detection and linked list problems. Ace interviews with Java examples and tips.",author:"Abstract Algorithms",tags:["fast-slow-pointers","algorithms","interview-prep","java"],status:"published",coverImage:"./assets/overview-600x400.jpg"};function o(e){let n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Navigation"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"TL;DR:"}),"\nMaster fast & slow pointers for cycle detection and linked list problems. Ace interviews with Java examples and tips."]}),"\n",(0,i.jsx)(n.h2,{children:"What are Fast & Slow Pointers?"}),"\n",(0,i.jsx)(n.p,{children:"Fast & slow pointers (also known as Floyd's Tortoise and Hare) are used to detect cycles and solve linked list problems efficiently."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why is it important for interviews?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used in cycle detection, finding middle of linked list, and more."}),"\n",(0,i.jsx)(n.li,{children:"Appears in problems like linked list cycle, palindrome check, etc."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Example Problem: Detect Cycle in Linked List"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem:"})," Given a linked list, determine if it has a cycle."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution:"})," Use two pointers moving at different speeds."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public static boolean hasCycle(ListNode head) {\r\n    ListNode slow = head, fast = head;\r\n    while (fast != null && fast.next != null) {\r\n        slow = slow.next;\r\n        fast = fast.next.next;\r\n        if (slow == fast) return true;\r\n    }\r\n    return false;\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{children:"Interview Scenarios"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Find Middle of Linked List"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check if Linked List is Palindrome"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Find Start of Cycle"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Practice Problems"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"LeetCode 141. Linked List Cycle"}),"\n",(0,i.jsx)(n.li,{children:"LeetCode 876. Middle of the Linked List"}),"\n",(0,i.jsx)(n.li,{children:"LeetCode 234. Palindrome Linked List"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Key Takeaways"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fast & slow pointers are essential for linked list and cycle problems."}),"\n",(0,i.jsx)(n.li,{children:"Practice with real problems and discuss edge cases in interviews."}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},75595:function(e,n,s){s.d(n,{a:function(){return r}});var i=s(2265);let t=i.createContext({});function r(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}}}]);