"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5546],{65546:function(e,n,r){r.r(n),r.d(n,{default:function(){return d},frontmatter:function(){return s},metadata:function(){return a}});var t=r(57437),i=r(75595);let s=void 0,a={id:"segmenttree-basics-java-20250718",slug:"segmenttree-basics-java",title:"Segment Tree Data Structure: Basics, Design, and Java Implementation",date:"2025-07-18",excerpt:"Learn the fundamentals of the segment tree data structure, allowed operations, Java implementation, and see where segment trees are used in advanced algorithms.",author:"Abstract Algorithms",tags:["segment-tree","data-structures","java","interview-prep"],status:"published",coverImage:"./assets/segmenttree-overview-600x400.jpg"};function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"TLDR:"})," Segment trees efficiently support range queries and updates on arrays, making them ideal for interval and range problems. This guide covers segment tree basics, allowed operations, Java implementation, and links to advanced posts using segment trees."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Navigation:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#what-is-a-segment-tree-",children:"What is a Segment Tree? \uD83D\uDE80"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#allowed-operations",children:"Allowed Operations"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#how-to-design-a-segment-tree-in-java-",children:"How to Design a Segment Tree in Java \uD83D\uDCBB"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#where-segment-trees-are-used-",children:"Where Segment Trees Are Used \uD83E\uDDE9"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#pro-tips-for-interviews-",children:"Pro Tips for Interviews \uD83D\uDCA1"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{children:"What is a Segment Tree? \uD83D\uDE80"}),"\n",(0,t.jsx)(n.p,{children:"A segment tree is a binary tree data structure that allows efficient range queries and updates on arrays (e.g., sum, min, max). Each node represents a segment (interval) of the array."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Purpose:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Efficient range queries (sum, min, max, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Efficient range updates"}),"\n",(0,t.jsx)(n.li,{children:"Used in interval and range query problems"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{children:"Allowed Operations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"build(arr):"})," Build the segment tree from an array"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"query(l, r):"})," Query a range [l, r] for sum/min/max"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update(i, x):"})," Update the value at index i"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{children:"How to Design a Segment Tree in Java \uD83D\uDCBB"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Approach:"}),"\r\nUse a binary tree structure to represent segments. Each node stores information about a segment of the array."]}),"\n",(0,t.jsx)(n.h3,{children:"Custom Segment Tree Implementation (Range Sum)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class SegmentTree {\r\n    private int[] tree, arr;\r\n    private int n;\r\n    public SegmentTree(int[] arr) {\r\n        this.n = arr.length;\r\n        this.arr = arr.clone();\r\n        tree = new int[4 * n];\r\n        build(1, 0, n - 1);\r\n    }\r\n    private void build(int node, int l, int r) {\r\n        if (l == r) tree[node] = arr[l];\r\n        else {\r\n            int m = (l + r) / 2;\r\n            build(2 * node, l, m);\r\n            build(2 * node + 1, m + 1, r);\r\n            tree[node] = tree[2 * node] + tree[2 * node + 1];\r\n        }\r\n    }\r\n    public int query(int ql, int qr) { return query(1, 0, n - 1, ql, qr); }\r\n    private int query(int node, int l, int r, int ql, int qr) {\r\n        if (qr < l || r < ql) return 0;\r\n        if (ql <= l && r <= qr) return tree[node];\r\n        int m = (l + r) / 2;\r\n        return query(2 * node, l, m, ql, qr) + query(2 * node + 1, m + 1, r, ql, qr);\r\n    }\r\n    public void update(int idx, int val) { update(1, 0, n - 1, idx, val); }\r\n    private void update(int node, int l, int r, int idx, int val) {\r\n        if (l == r) tree[node] = val;\r\n        else {\r\n            int m = (l + r) / 2;\r\n            if (idx <= m) update(2 * node, l, m, idx, val);\r\n            else update(2 * node + 1, m + 1, r, idx, val);\r\n            tree[node] = tree[2 * node] + tree[2 * node + 1];\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{children:"Where Segment Trees Are Used \uD83E\uDDE9"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/posts/genai-mastery-series/part-9",children:"Range Query and Interval Problems"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/posts/genai-mastery-series/part-11",children:"Dynamic Programming Optimization"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/posts/genai-mastery-series/part-12",children:"Competitive Programming"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{children:"Pro Tips for Interviews \uD83D\uDCA1"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Draw tree structure for each operation"}),"\n",(0,t.jsx)(n.li,{children:"Know time/space complexity for operations"}),"\n",(0,t.jsx)(n.li,{children:"Practice both query and update operations"}),"\n",(0,t.jsx)(n.li,{children:"Use segment trees for range and interval problems"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Summary:"}),"\r\nSegment trees are essential for range query and interval problems. Master the basics, understand allowed operations, and practice implementing segment trees in Java to build a strong foundation."]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},75595:function(e,n,r){r.d(n,{a:function(){return s}});var t=r(2265);let i=t.createContext({});function s(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}}}]);