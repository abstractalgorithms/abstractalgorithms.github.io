name: Build Android APK

on:
  # Temporarily disabled - uncomment when Android development is ready
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'android/**'
  #     - '.github/workflows/build-android.yml'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'android/**'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

# Run Android builds independently from web deployment
concurrency:
  group: "android-build-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ./android/android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('android/android/**/*.gradle*', 'android/android/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      working-directory: ./android/android
      run: chmod +x gradlew

    - name: Create keystore for release builds
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android/app
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'password123' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'password123' }}
      run: |
        keytool -genkeypair -v -keystore release.keystore -alias release -keyalg RSA -keysize 2048 -validity 10000 \
          -storepass "${KEYSTORE_PASSWORD}" \
          -keypass "${KEY_PASSWORD}" \
          -dname "CN=Abstract Algorithms, OU=Development, O=Abstract Algorithms, L=Unknown, S=Unknown, C=US"

    - name: Create gradle.properties for release
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'password123' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'password123' }}
      run: |
        echo "MYAPP_UPLOAD_STORE_FILE=app/release.keystore" >> gradle.properties
        echo "MYAPP_UPLOAD_KEY_ALIAS=release" >> gradle.properties
        echo "MYAPP_UPLOAD_STORE_PASSWORD=${KEYSTORE_PASSWORD}" >> gradle.properties
        echo "MYAPP_UPLOAD_KEY_PASSWORD=${KEY_PASSWORD}" >> gradle.properties

    - name: Build debug APK
      if: github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == ''
      working-directory: ./android/android
      run: ./gradlew assembleDebug

    - name: Build release APK
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android
      run: ./gradlew assembleRelease

    - name: Upload debug APK
      if: github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == ''
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: ./android/android/app/build/outputs/apk/debug/*.apk
        retention-days: 30

    - name: Upload release APK
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ./android/android/app/build/outputs/apk/release/*.apk
        retention-days: 30

    - name: Create Release
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: android-v${{ github.run_number }}
        release_name: Android Release v${{ github.run_number }}
        body: |
          Android APK release built from commit ${{ github.sha }}
          
          ## Changes
          - Built with React Native
          - Optimized for Android devices
          
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./android/android/app/build/outputs/apk/release/app-release.apk
        asset_name: abstract-algorithms-android.apk
        asset_content_type: application/vnd.android.package-archive
