name: Build Android APK

on:
  push:
    branches: [ main ]
    paths:
      - 'android/**'
      - '.github/workflows/build-android.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'android/**'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: android/package-lock.json

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install React Native CLI
      run: npm install -g @react-native-community/cli

    - name: Install dependencies
      working-directory: ./android
      run: npm ci

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      working-directory: ./android/android
      run: chmod +x gradlew

    - name: Create keystore for release builds
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android/app
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'password123' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'password123' }}
      run: |
        keytool -genkeypair -v -keystore release.keystore -alias release -keyalg RSA -keysize 2048 -validity 10000 \
          -storepass "${KEYSTORE_PASSWORD}" \
          -keypass "${KEY_PASSWORD}" \
          -dname "CN=Abstract Algorithms, OU=Development, O=Abstract Algorithms, L=Unknown, S=Unknown, C=US"

    - name: Create gradle.properties for release
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'password123' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'password123' }}
      run: |
        echo "MYAPP_UPLOAD_STORE_FILE=app/release.keystore" >> gradle.properties
        echo "MYAPP_UPLOAD_KEY_ALIAS=release" >> gradle.properties
        echo "MYAPP_UPLOAD_STORE_PASSWORD=${KEYSTORE_PASSWORD}" >> gradle.properties
        echo "MYAPP_UPLOAD_KEY_PASSWORD=${KEY_PASSWORD}" >> gradle.properties

    - name: Build debug APK
      if: github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == ''
      working-directory: ./android/android
      run: ./gradlew assembleDebug

    - name: Build release APK
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      working-directory: ./android/android
      run: ./gradlew assembleRelease

    - name: Upload debug APK artifact
      if: github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == ''
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: android/android/app/build/outputs/apk/debug/app-debug.apk

    - name: Upload release APK artifact
      if: github.event.inputs.release_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: android/android/app/build/outputs/apk/release/app-release.apk

    - name: Create Release
      if: github.ref == 'refs/heads/main' && (github.event.inputs.release_type == 'release' || github.event.inputs.release_type == '')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: android-v${{ github.run_number }}
        name: Android App v${{ github.run_number }}
        body: |
          ## Abstract Algorithms Android App
          
          This is an automated release of the Abstract Algorithms blog as an Android app.
          
          ### Features:
          - ðŸ“± Native Android WebView wrapper
          - ðŸ”„ Offline caching support
          - ðŸŽ¨ Optimized mobile interface
          - âš¡ Fast loading and navigation
          - ðŸ”— Deep linking support
          
          ### Installation:
          Download the APK file and install it on your Android device.
          Make sure to enable "Install from unknown sources" in your device settings.
          
          ### Changes:
          - Latest blog content from abstractalgorithms.github.io
          - Performance improvements
          - Bug fixes and stability improvements
        files: |
          android/android/app/build/outputs/apk/release/app-release.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
